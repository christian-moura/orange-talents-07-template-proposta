# Porta Aplicacao
server.port =${SERVER_PORT:8585}
# datasource
#spring.datasource.url=${DB_URL:jdbc:postgresql://desktop_postgres-propostas_1:5434/propostas}
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5434/propostas}
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:root}
spring.datasource.initialization-mode=always
spring.jpa.defer-datasource-initialization=true



# jpa
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# URl API Externas
client.avaliacao-financeira.url = ${URL_API_FINANCEIRA:http://localhost:9999/api}
client.accounts.url = ${URL_API_CONTAS:http://localhost:8888/api}


# Actuator
management.endpoints.web.exposure.include=health,prometheus,metrics


# HealthCheck
management.endpoint.health.show-details=always

#Prometheus e Métricas
management.endpoints.prometheus.enabled=true
management.endpoint.metrics.enabled=true
management.metrics.tags.aplicacao = ${NOME_DA_APLICACAO:servico propostas}
management.metrics.tags.ambiente = ${AMBIENTE :desenvolvimento}



# spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/PropostasRealm}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/PropostasRealm/protocol/openid-connect/certs}

